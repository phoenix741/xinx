// This file is auto-generated file, don't modify it unless you want to lose your code
// Generated by qgenconfig v0.1 (c) Ulrich Van Den Hekke

#pragma once
#ifndef _GENERIXSETTINGS_H_
#define _GENERIXSETTINGS_H_

#include <QSettings>
#include <QString>
#include <QHash>

class PrivateGenerixSettings;

class GenerixSettingsSettings : public QSettings {
public:
	GenerixSettingsSettings( const QString & organization, const QString & application );
	void setValue( const QString & key, const QVariant & value, const QVariant & defaultValue );
	void setValue( const QString & key, const QVariant & value );
};

class GenerixSettings {
public:
	struct struct_globals {
		QString defaultProjectPathName;
		QHash<QString,QString> files;
	};


	GenerixSettings( const GenerixSettings & origine );
	GenerixSettings();
	virtual ~GenerixSettings();

	virtual void setDefault();
	virtual void load();
	virtual void save();

	struct_globals & config();

	GenerixSettings& operator=(const GenerixSettings& p);
protected:
	virtual struct_globals getDefaultGlobals();
	virtual GenerixSettings::struct_globals getSettingsGlobals( GenerixSettingsSettings * settings, const QString & path, const GenerixSettings::struct_globals & defaultValue );
	virtual void setSettingsGlobals( GenerixSettingsSettings * settings, const QString & path, const GenerixSettings::struct_globals & value );

	virtual QHash<QString,QString> getSettingsHash_QString( GenerixSettingsSettings * settings, const QString & path, const QHash<QString,QString> & defaultValue );
	virtual void setSettingsHash_QString( GenerixSettingsSettings * settings, const QString & path, const QHash<QString,QString> & value );

private:
	PrivateGenerixSettings * d;
	friend class PrivateGenerixSettings;
};
#endif // _GENERIXSETTINGS_H_

