<ui version="4.0" >
 <class>CustomDialog</class>
 <widget class="QDialog" name="CustomDialog" >
  <property name="geometry" >
   <rect>
    <x>0</x>
    <y>0</y>
    <width>679</width>
    <height>483</height>
   </rect>
  </property>
  <property name="windowTitle" >
   <string>Customize</string>
  </property>
  <layout class="QGridLayout" >
   <item rowspan="4" row="0" column="0" >
    <widget class="QListWidget" name="m_listWidget" >
     <property name="minimumSize" >
      <size>
       <width>128</width>
       <height>0</height>
      </size>
     </property>
     <property name="maximumSize" >
      <size>
       <width>128</width>
       <height>16777215</height>
      </size>
     </property>
     <property name="iconSize" >
      <size>
       <width>96</width>
       <height>84</height>
      </size>
     </property>
     <property name="movement" >
      <enum>QListView::Static</enum>
     </property>
     <property name="spacing" >
      <number>12</number>
     </property>
     <property name="viewMode" >
      <enum>QListView::IconMode</enum>
     </property>
     <item>
      <property name="text" >
       <string>General</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-general.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Project</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-project.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Revision</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preference-rcs.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Editor</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-editor.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Font</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-font.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Syntax</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-color.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>XML Pres.</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-xmlpres.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Snipet</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-desktop-keyboard.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Tools</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-tools.png</iconset>
      </property>
     </item>
     <item>
      <property name="text" >
       <string>Modules</string>
      </property>
      <property name="icon" >
       <iconset resource="../application.qrc" >:/images/preferences-plugin.png</iconset>
      </property>
     </item>
    </widget>
   </item>
   <item row="0" column="1" >
    <widget class="QLabel" name="label_18" >
     <property name="font" >
      <font>
       <weight>75</weight>
       <bold>true</bold>
      </font>
     </property>
     <property name="text" >
      <string>General</string>
     </property>
    </widget>
   </item>
   <item row="1" column="1" >
    <widget class="Line" name="line_2" >
     <property name="orientation" >
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
   </item>
   <item row="2" column="1" >
    <widget class="QStackedWidget" name="stackedWidget" >
     <property name="currentIndex" >
      <number>0</number>
     </property>
     <property name="color" stdset="0" >
      <color>
       <red>0</red>
       <green>0</green>
       <blue>0</blue>
      </color>
     </property>
     <widget class="QWidget" name="m_general" >
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <widget class="QLabel" name="label_3" >
         <property name="text" >
          <string>Application &amp;description path :</string>
         </property>
         <property name="buddy" >
          <cstring>m_descriptionPathLineEdit</cstring>
         </property>
        </widget>
       </item>
       <item row="0" column="1" >
        <widget class="DirectoryEdit" name="m_descriptionPathLineEdit" >
         <property name="whatsThis" >
          <string>&lt;p>This is the path where &lt;b>XINX&lt;/b> data files are stored (as snipet or completion file). &lt;/p>
&lt;p>Normally the directory is stored in the xml sub-directory of &lt;b>XINX&lt;/b>&lt;/p></string>
         </property>
        </widget>
       </item>
       <item row="0" column="2" >
        <widget class="QToolButton" name="m_changeApplicationDescriptionPathBtn" >
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/folder.png</iconset>
         </property>
        </widget>
       </item>
       <item row="1" column="0" >
        <widget class="QLabel" name="label" >
         <property name="text" >
          <string>&amp;Language :</string>
         </property>
         <property name="buddy" >
          <cstring>m_langComboBox</cstring>
         </property>
        </widget>
       </item>
       <item row="1" column="1" >
        <widget class="QComboBox" name="m_langComboBox" >
         <property name="whatsThis" >
          <string>&lt;p>Langue in which &lt;b>XINX&lt;/b> must be used.&lt;/p>
&lt;p>&lt;i>Modification take effect at restart.&lt;/i>&lt;/p></string>
         </property>
         <item>
          <property name="text" >
           <string>(en) English</string>
          </property>
          <property name="icon" >
           <iconset resource="../application.qrc" >:/images/usa.png</iconset>
          </property>
         </item>
         <item>
          <property name="text" >
           <string>(fr_FR) French</string>
          </property>
          <property name="icon" >
           <iconset resource="../application.qrc" >:/images/france.png</iconset>
          </property>
         </item>
        </widget>
       </item>
       <item row="2" column="1" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>325</width>
           <height>91</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_project" >
      <layout class="QGridLayout" >
       <item row="0" column="0" colspan="3" >
        <widget class="QCheckBox" name="m_alertStandardCheckBox" >
         <property name="whatsThis" >
          <string>&lt;p>In derivated project mode only, when a standard file (with no prefix) is saving, &lt;b>XINX&lt;/b> ask you to save the file with a new prefixed name.&lt;/p>
&lt;p>The prefix must be specified in the project property.&lt;/p></string>
         </property>
         <property name="text" >
          <string>&amp;Alert user when file is standard (project mode only)</string>
         </property>
        </widget>
       </item>
       <item row="1" column="0" colspan="3" >
        <widget class="QCheckBox" name="m_saveSessionCheckBox" >
         <property name="whatsThis" >
          <string>&lt;p>This define the default way to close the project.&lt;/p>
&lt;p>If checked, when the project, or the application is closed informations about unsaved files are stored in a session file.&lt;/p>
&lt;p>Else, the XINX ask the user about unsaved file.&lt;/p>
&lt;p/>
&lt;p>&lt;i>In case of crash &lt;b>XINX&lt;/b> save the project in session mode automatically.&lt;/i>&lt;/p></string>
         </property>
         <property name="text" >
          <string>&amp;Save project with session information by default (content of modified file)</string>
         </property>
        </widget>
       </item>
       <item row="2" column="0" >
        <widget class="QLabel" name="label_2" >
         <property name="text" >
          <string>&amp;Application server path :</string>
         </property>
         <property name="buddy" >
          <cstring>m_projectPathLineEdit</cstring>
         </property>
        </widget>
       </item>
       <item row="2" column="1" >
        <widget class="DirectoryEdit" name="m_projectPathLineEdit" >
         <property name="whatsThis" >
          <string>&lt;p>This the path where the save dialog must be opened when you create a new project.&lt;/p>
&lt;p>&lt;i>As the author set the project path to the Application Server path, this path is now the project path. You can safely use another path, but in &lt;i>New Project Wizard&lt;/i>, the Application Server path would be wrong.&lt;/i>&lt;/p></string>
         </property>
        </widget>
       </item>
       <item row="2" column="2" >
        <widget class="QToolButton" name="m_changeProjectPathBtn" >
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/folder.png</iconset>
         </property>
        </widget>
       </item>
       <item row="3" column="0" >
        <widget class="QLabel" name="label_11" >
         <property name="text" >
          <string>Default &amp;specifique path name :</string>
         </property>
         <property name="buddy" >
          <cstring>m_lineEditDefaultProjectPathName</cstring>
         </property>
        </widget>
       </item>
       <item row="3" column="1" >
        <widget class="QLineEdit" name="m_lineEditDefaultProjectPathName" >
         <property name="whatsThis" >
          <string>&lt;p>This is the path where derivated files are stored in derivated project mode.&lt;/p>
&lt;p>&lt;i>In &lt;b>Generix&lt;/b>, this is a sub-directory of langue/fra/nav/&lt;/i>&lt;/p></string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" >
        <widget class="QLabel" name="label_16" >
         <property name="text" >
          <string>&amp;Specifique file :</string>
         </property>
         <property name="buddy" >
          <cstring>m_specifiqueTableView</cstring>
         </property>
        </widget>
       </item>
       <item row="5" column="0" colspan="2" >
        <widget class="QTableView" name="m_specifiqueTableView" >
         <property name="whatsThis" >
          <string>For each type of files, you can choose a sub-directory of the default specifique path name (ie. &lt;i>langue/fra/nav/projet/js&lt;/i>). You can choose if the type of file can be Specifique or not. If not, the sub-directory is ignored.</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_revision" >
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <widget class="QCheckBox" name="m_closeLogCheckBox" >
         <property name="whatsThis" >
          <string>&lt;p>When an action with the revision control system is made, a log window is open and show information about the progress.&lt;/p>
&lt;p>If checked, the log windows is automaticallyclosed when action (like update, commit ...) finished.&lt;/p></string>
         </property>
         <property name="text" >
          <string>&amp;Close the Version management Log automatically.</string>
         </property>
        </widget>
       </item>
       <item row="1" column="0" >
        <widget class="QCheckBox" name="m_changeLogCheckBox" >
         <property name="whatsThis" >
          <string>&lt;p>When checked, a &lt;i>ChangeLog&lt;/i> file is created/appended at each commit with date, hour, and the commit messages.&lt;/p></string>
         </property>
         <property name="text" >
          <string>&amp;Update "ChangeLog" automatically.</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="2" column="0" >
        <widget class="QLabel" name="m_labelLink" >
         <property name="text" >
          <string>&lt;i>Options related to a named revision manager (such as CVS or Subversion) must be changed in the &lt;a href="#modules">Modules&lt;/a> section.&lt;/i></string>
         </property>
         <property name="wordWrap" >
          <bool>true</bool>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_editor" >
      <layout class="QGridLayout" >
       <item row="0" column="0" colspan="2" >
        <widget class="QGroupBox" name="groupBox_3" >
         <property name="title" >
          <string>&amp;Options</string>
         </property>
         <layout class="QVBoxLayout" >
          <item>
           <widget class="QCheckBox" name="m_popupWhenFileModifiedCheckBox" >
            <property name="whatsThis" >
             <string>&lt;p>Alert user when the file is modified by an extern application. The user has the choice to open the new file (&lt;u>and loose his change&lt;/u>) or keep current file.&lt;/p></string>
            </property>
            <property name="text" >
             <string>&amp;Popup when file modifed</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="m_createBakCheckBox" >
            <property name="whatsThis" >
             <string>&lt;p>Create a backup file before saving the file. The backup file is stored in the same directory that the original file. &lt;/p>
&lt;p>The backup is created by copy the modified file before he his saved.&lt;/p></string>
            </property>
            <property name="text" >
             <string>&amp;Create backup file when saving (.bak)</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="m_prettyPrintOnSavingCheckBox" >
            <property name="whatsThis" >
             <string>&lt;p>If the box is checked, when saving the file, &lt;b>XINX &lt;/b>apply the pretty print function on the text. This format the code on saving file. &lt;/p>
&lt;p>&lt;i>Saving file can be slower.&lt;/i>&lt;/p></string>
            </property>
            <property name="text" >
             <string>P&amp;retty print on saving</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="0" column="2" >
        <widget class="QGroupBox" name="groupBox_8" >
         <property name="title" >
          <string>Close Tab Button</string>
         </property>
         <layout class="QGridLayout" >
          <item row="0" column="0" >
           <widget class="QRadioButton" name="m_closeBtnRadioButton" >
            <property name="whatsThis" >
             <string>&lt;p>&lt;img src=":/images/tabclose.png"/>Show a button on the right corner of &lt;b>XINX&lt;/b>.&lt;/p></string>
            </property>
            <property name="text" >
             <string>Close button on the &amp;tab widget</string>
            </property>
           </widget>
          </item>
          <item row="1" column="0" >
           <widget class="QRadioButton" name="m_cornerBtnRadioButton" >
            <property name="whatsThis" >
             <string>&lt;p>&lt;img src=":/images/fileclose.png"/>Show a close button on each tab.&lt;/p></string>
            </property>
            <property name="text" >
             <string>Close button on right &amp;corner</string>
            </property>
            <property name="checked" >
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item row="2" column="0" >
           <widget class="QRadioButton" name="m_closeAndCornerBtnRadioButton" >
            <property name="whatsThis" >
             <string>&lt;p>&lt;img src=":/images/tabclose.png" />&lt;img src=":/images/fileclose.png" />Show a button on the right corner of &lt;b>XINX&lt;/b> and another on each tab. This option is the concatenation of the two other options&lt;/p></string>
            </property>
            <property name="text" >
             <string>Close button on the tab widget &amp;and the corner</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="1" column="0" >
        <widget class="QLabel" name="label_19" >
         <property name="text" >
          <string>&amp;Code helper :</string>
         </property>
         <property name="buddy" >
          <cstring>m_completionLevelComboBox</cstring>
         </property>
        </widget>
       </item>
       <item row="1" column="1" colspan="2" >
        <widget class="QComboBox" name="m_completionLevelComboBox" >
         <property name="whatsThis" >
          <string>&lt;p>Level of the completion. The completion can be :&lt;/p>
&lt;ul>&lt;li>Desactivated&lt;/li>
&lt;li>Activated but only with an help on tapping&lt;/li>
&lt;li>Fully activated with the help on tapping and the adding code (as configured on completion file)&lt;/li>&lt;/ul></string>
         </property>
         <item>
          <property name="text" >
           <string>Desactivate completion</string>
          </property>
         </item>
         <item>
          <property name="text" >
           <string>Active popup completion dialog</string>
          </property>
         </item>
         <item>
          <property name="text" >
           <string>Active automatique code writing (Niveau 1)</string>
          </property>
         </item>
         <item>
          <property name="text" >
           <string>Active automatique code writing (Niveau 2)</string>
          </property>
         </item>
        </widget>
       </item>
       <item row="2" column="1" colspan="2" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>166</width>
           <height>101</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_font" >
      <layout class="QGridLayout" >
       <item row="0" column="0" colspan="2" >
        <widget class="QLabel" name="label_6" >
         <property name="text" >
          <string>&amp;Font name :</string>
         </property>
         <property name="buddy" >
          <cstring>m_fontComboBox</cstring>
         </property>
        </widget>
       </item>
       <item row="0" column="2" >
        <widget class="QFontComboBox" name="m_fontComboBox" >
         <property name="whatsThis" >
          <string>Name of the font to use in all editors.</string>
         </property>
        </widget>
       </item>
       <item row="1" column="0" colspan="2" >
        <widget class="QLabel" name="label_10" >
         <property name="text" >
          <string>Font &amp;size :</string>
         </property>
         <property name="buddy" >
          <cstring>m_fontSizeSpinBox</cstring>
         </property>
        </widget>
       </item>
       <item row="1" column="2" >
        <widget class="QSpinBox" name="m_fontSizeSpinBox" >
         <property name="whatsThis" >
          <string>Size of the font in the editor. The value is a global value.</string>
         </property>
        </widget>
       </item>
       <item row="2" column="0" colspan="3" >
        <widget class="QCheckBox" name="m_showCurrentLineCheckBox" >
         <property name="whatsThis" >
          <string>Show the current line in a different color. Usually a blue-gray.</string>
         </property>
         <property name="text" >
          <string>Show current &amp;line</string>
         </property>
        </widget>
       </item>
       <item row="3" column="0" colspan="3" >
        <widget class="QCheckBox" name="m_autoHighlightCheckBox" >
         <property name="whatsThis" >
          <string>&lt;p>Highlight automatically all same word in the editor in the same color.&lt;/p>
&lt;p>&lt;i>This can be slow down the edition mode.&lt;/i>&lt;/p></string>
         </property>
         <property name="text" >
          <string>Auto highlight same &amp;word</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" >
        <widget class="QLabel" name="label_17" >
         <property name="text" >
          <string>&amp;Color of highlight:</string>
         </property>
         <property name="buddy" >
          <cstring>m_highlightTextColorComboBox</cstring>
         </property>
        </widget>
       </item>
       <item row="4" column="1" colspan="2" >
        <widget class="KColorCombo" name="m_highlightTextColorComboBox" >
         <property name="whatsThis" >
          <string>Color used for highlight same word</string>
         </property>
        </widget>
       </item>
       <item row="5" column="0" colspan="3" >
        <widget class="QCheckBox" name="m_showTabulationCheckBox" >
         <property name="whatsThis" >
          <string>Show tabulation and space in the editor with specialcharacter (in greyed colour).</string>
         </property>
         <property name="text" >
          <string>Show &amp;tabulation and space in the editor</string>
         </property>
        </widget>
       </item>
       <item row="6" column="0" colspan="2" >
        <widget class="QLabel" name="label_14" >
         <property name="text" >
          <string>Size of a &amp;tabulation :</string>
         </property>
         <property name="buddy" >
          <cstring>m_sizeOfTabSpinBox</cstring>
         </property>
        </widget>
       </item>
       <item row="6" column="2" >
        <widget class="QSpinBox" name="m_sizeOfTabSpinBox" >
         <property name="whatsThis" >
          <string>Size of tabulation in number of character. This is the number of character that tabulation replaces.</string>
         </property>
        </widget>
       </item>
       <item row="7" column="1" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>20</width>
           <height>71</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_syntax" >
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <widget class="QComboBox" name="m_highlighterComboBox" >
         <property name="whatsThis" >
          <string>&lt;p>List of highlighter. Highlighter is used to color a text in an editor. &lt;/p>
&lt;p>&lt;i>To add new highlighter, you must add the corresponding plugin.&lt;/i>&lt;/p></string>
         </property>
        </widget>
       </item>
       <item rowspan="2" row="0" column="1" >
        <widget class="QGroupBox" name="groupBox_4" >
         <property name="title" >
          <string>Customize syntax</string>
         </property>
         <layout class="QGridLayout" >
          <property name="leftMargin" >
           <number>9</number>
          </property>
          <property name="topMargin" >
           <number>9</number>
          </property>
          <property name="rightMargin" >
           <number>9</number>
          </property>
          <property name="bottomMargin" >
           <number>9</number>
          </property>
          <property name="horizontalSpacing" >
           <number>6</number>
          </property>
          <property name="verticalSpacing" >
           <number>6</number>
          </property>
          <item row="2" column="1" colspan="2" >
           <widget class="KColorCombo" name="m_colorComboBox" >
            <property name="whatsThis" >
             <string>Color used in the text for the selected token.</string>
            </property>
           </widget>
          </item>
          <item row="2" column="0" >
           <widget class="QLabel" name="label_5" >
            <property name="text" >
             <string>&amp;Color :</string>
            </property>
            <property name="buddy" >
             <cstring>m_colorComboBox</cstring>
            </property>
           </widget>
          </item>
          <item row="0" column="0" colspan="2" >
           <widget class="QCheckBox" name="m_boldCheckBox" >
            <property name="font" >
             <font/>
            </property>
            <property name="whatsThis" >
             <string>&lt;b>Wrote the text in bold&lt;/b></string>
            </property>
            <property name="text" >
             <string>&amp;Bold</string>
            </property>
           </widget>
          </item>
          <item row="0" column="2" >
           <widget class="QCheckBox" name="m_italicCheckBox" >
            <property name="font" >
             <font/>
            </property>
            <property name="whatsThis" >
             <string>&lt;i>Wrote the text in italic.&lt;/i></string>
            </property>
            <property name="text" >
             <string>&amp;Italic</string>
            </property>
           </widget>
          </item>
          <item row="1" column="2" >
           <widget class="QCheckBox" name="m_StrikeoutCheckBox" >
            <property name="font" >
             <font/>
            </property>
            <property name="whatsThis" >
             <string>&lt;strike>Strikeout the text&lt;/strike></string>
            </property>
            <property name="text" >
             <string>&amp;Strikeout</string>
            </property>
           </widget>
          </item>
          <item row="1" column="0" colspan="2" >
           <widget class="QCheckBox" name="m_underlineCheckBox" >
            <property name="font" >
             <font/>
            </property>
            <property name="whatsThis" >
             <string>&lt;u>Underline the text&lt;/u></string>
            </property>
            <property name="text" >
             <string>&amp;Underline</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item rowspan="2" row="1" column="0" >
        <widget class="QListWidget" name="m_formatsListView" >
         <property name="minimumSize" >
          <size>
           <width>125</width>
           <height>0</height>
          </size>
         </property>
         <property name="maximumSize" >
          <size>
           <width>125</width>
           <height>16777215</height>
          </size>
         </property>
         <property name="whatsThis" >
          <string>List of token that can be modified on the highlighter. Each token is a part of a document (an XML node, an attribute, a reserved word, ...)</string>
         </property>
         <property name="sortingEnabled" >
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item row="2" column="1" >
        <widget class="QTextEdit" name="m_exempleTextEdit" >
         <property name="whatsThis" >
          <string>This is an example of how is showed the text in the editor after the change that are been made.</string>
         </property>
         <property name="lineWrapMode" >
          <enum>QTextEdit::NoWrap</enum>
         </property>
         <property name="readOnly" >
          <bool>true</bool>
         </property>
         <property name="tabStopWidth" >
          <number>15</number>
         </property>
         <property name="acceptRichText" >
          <bool>false</bool>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_xplPres" >
      <layout class="QVBoxLayout" >
       <item>
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="label_4" >
           <property name="text" >
            <string>&amp;Default expand path :</string>
           </property>
           <property name="buddy" >
            <cstring>m_expandPathLineEdit</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLineEdit" name="m_expandPathLineEdit" >
           <property name="whatsThis" >
            <string>This is the path where the view must begin. Generally the first node is the root path (ie. &lt;i>/layout_data&lt;/i>)</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QLabel" name="label_7" >
         <property name="text" >
          <string>&amp;Element to hide :</string>
         </property>
         <property name="buddy" >
          <cstring>m_hideElementList</cstring>
         </property>
        </widget>
       </item>
       <item>
        <widget class="XinxListWidgetImpl" native="1" name="m_hideElementList" >
         <property name="focusPolicy" >
          <enum>Qt::TabFocus</enum>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QGroupBox" name="groupBox_2" >
           <property name="title" >
            <string>&amp;Option</string>
           </property>
           <layout class="QVBoxLayout" >
            <item>
             <widget class="QCheckBox" name="m_showSubEltCheckBox" >
              <property name="whatsThis" >
               <string>If checked, when you filter the text, the list show sub-element of node where the filter verify the text.</string>
              </property>
              <property name="text" >
               <string>&amp;Show sub-element of a corresponding node</string>
              </property>
             </widget>
            </item>
            <item>
             <spacer>
              <property name="orientation" >
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" >
               <size>
                <width>20</width>
                <height>40</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </widget>
         </item>
         <item>
          <widget class="QGroupBox" name="groupBox" >
           <property name="title" >
            <string>&amp;Color</string>
           </property>
           <layout class="QGridLayout" >
            <item row="0" column="0" >
             <widget class="QLabel" name="label_8" >
              <property name="text" >
               <string>&amp;View color :</string>
              </property>
              <property name="buddy" >
               <cstring>m_viewColorBox</cstring>
              </property>
             </widget>
            </item>
            <item row="0" column="1" >
             <widget class="KColorCombo" name="m_viewColorBox" >
              <property name="whatsThis" >
               <string>Color of the node of view type (Generally begins by &lt;i>Vue...&lt;/i>)</string>
              </property>
             </widget>
            </item>
            <item row="1" column="0" >
             <widget class="QLabel" name="label_9" >
              <property name="text" >
               <string>&amp;Error color :</string>
              </property>
              <property name="buddy" >
               <cstring>m_errorColorBox</cstring>
              </property>
             </widget>
            </item>
            <item row="1" column="1" >
             <widget class="KColorCombo" name="m_errorColorBox" >
              <property name="whatsThis" >
               <string>Color of a node with a sub-element of name error.</string>
              </property>
             </widget>
            </item>
            <item row="2" column="0" >
             <widget class="QLabel" name="label_12" >
              <property name="text" >
               <string>&amp;Screen data color :</string>
              </property>
              <property name="buddy" >
               <cstring>m_screenColorBox</cstring>
              </property>
             </widget>
            </item>
            <item row="2" column="1" >
             <widget class="KColorCombo" name="m_screenColorBox" >
              <property name="whatsThis" >
               <string>Color of a balise with a &lt;i>screen_data&lt;/i> node.</string>
              </property>
             </widget>
            </item>
           </layout>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>20</width>
           <height>31</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_snipet" >
      <layout class="QGridLayout" >
       <item row="0" column="0" colspan="6" >
        <widget class="QLabel" name="label_13" >
         <property name="text" >
          <string>List of snipet that could be used as a completion (with the snipet key) or called manually in the menu. You can also import snipet in &lt;b>XINX&lt;/b> file or export snipet to a &lt;i>XML&lt;/i> file.</string>
         </property>
         <property name="wordWrap" >
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item row="1" column="0" colspan="6" >
        <widget class="QTableView" name="m_snipetTableView" >
         <property name="alternatingRowColors" >
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item row="2" column="0" >
        <widget class="QPushButton" name="m_addPushButton" >
         <property name="text" >
          <string>&amp;Add</string>
         </property>
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/add.png</iconset>
         </property>
        </widget>
       </item>
       <item row="2" column="1" >
        <widget class="QPushButton" name="m_removePushButton" >
         <property name="text" >
          <string>&amp;Delete</string>
         </property>
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/remove.png</iconset>
         </property>
        </widget>
       </item>
       <item row="2" column="2" >
        <widget class="QPushButton" name="m_modifyPushButton" >
         <property name="text" >
          <string>&amp;Modify</string>
         </property>
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/document-properties.png</iconset>
         </property>
        </widget>
       </item>
       <item row="2" column="3" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Horizontal</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>40</width>
           <height>20</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="2" column="4" >
        <widget class="QPushButton" name="m_importPushButton" >
         <property name="text" >
          <string>&amp;Import ...</string>
         </property>
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/document-import.png</iconset>
         </property>
        </widget>
       </item>
       <item row="2" column="5" >
        <widget class="QPushButton" name="m_exportPushButton" >
         <property name="text" >
          <string>&amp;Export ...</string>
         </property>
         <property name="icon" >
          <iconset resource="../application.qrc" >:/images/document-export.png</iconset>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_tools" >
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <widget class="QTableView" name="m_toolsTable" >
         <property name="whatsThis" >
          <string>&lt;p>List of tools used by &lt;b>XINX&lt;/b> and all plugins. Tools are external application called by this application.&lt;/p>
&lt;p>If the tool can't be find, the text color will be &lt;span style="color:#ff0000;">red&lt;/span>.&lt;/p>
&lt;p>To edit a tool, double click (or presse F2) on the path of the tool.&lt;/p></string>
         </property>
         <property name="alternatingRowColors" >
          <bool>true</bool>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="m_modules" >
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <widget class="QTabWidget" name="tabWidget" >
         <property name="currentIndex" >
          <number>0</number>
         </property>
         <widget class="QWidget" name="tab" >
          <attribute name="title" >
           <string>Plugins</string>
          </attribute>
          <layout class="QGridLayout" >
           <item row="0" column="0" >
            <widget class="XinxPluginSelector" name="m_pluginListView" >
             <property name="whatsThis" >
              <string>&lt;p>List of plugins of &lt;b>XINX&lt;/b>. Plugins are piece of software that can be added without reinstall &lt;b>XINX&lt;/b>.&lt;/p>
&lt;p>&lt;b>XINX&lt;/b> is now modular, so you can wrote your own plugins and enjoy. Plugins are writte in &lt;i>C++&lt;/i>, use &lt;i>Qt&lt;/i>, and must be in licence accepted by &lt;i>Qt&lt;/i>.&lt;/p></string>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
         <widget class="QWidget" name="Tab_2" >
          <attribute name="title" >
           <string>Script</string>
          </attribute>
          <layout class="QGridLayout" >
           <item row="0" column="0" >
            <widget class="QListView" name="m_scriptListView" />
           </item>
          </layout>
         </widget>
        </widget>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
   <item row="3" column="1" >
    <layout class="QHBoxLayout" >
     <item>
      <widget class="QPushButton" name="m_defaultPushButton" >
       <property name="text" >
        <string>&amp;Default</string>
       </property>
      </widget>
     </item>
     <item>
      <spacer>
       <property name="orientation" >
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeHint" >
        <size>
         <width>131</width>
         <height>31</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <widget class="QPushButton" name="okButton" >
       <property name="text" >
        <string>&amp;OK</string>
       </property>
       <property name="icon" >
        <iconset resource="../application.qrc" >:/images/button_ok.png</iconset>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="cancelButton" >
       <property name="text" >
        <string>&amp;Cancel</string>
       </property>
       <property name="icon" >
        <iconset resource="../application.qrc" >:/images/button_cancel.png</iconset>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>DirectoryEdit</class>
   <extends>QLineEdit</extends>
   <header location="global" >directoryedit.h</header>
  </customwidget>
  <customwidget>
   <class>KColorCombo</class>
   <extends>QComboBox</extends>
   <header location="global" >kcolorcombo.h</header>
  </customwidget>
  <customwidget>
   <class>XinxPluginSelector</class>
   <extends>QListView</extends>
   <header location="global" >xinxpluginselector.h</header>
  </customwidget>
  <customwidget>
   <class>XinxListWidgetImpl</class>
   <extends>QWidget</extends>
   <header location="global" >xinxlistwidgetimpl.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>m_autoHighlightCheckBox</tabstop>
  <tabstop>m_highlightTextColorComboBox</tabstop>
  <tabstop>m_showCurrentLineCheckBox</tabstop>
  <tabstop>m_fontSizeSpinBox</tabstop>
  <tabstop>m_fontComboBox</tabstop>
  <tabstop>m_completionLevelComboBox</tabstop>
  <tabstop>m_showTabulationCheckBox</tabstop>
  <tabstop>m_popupWhenFileModifiedCheckBox</tabstop>
  <tabstop>m_createBakCheckBox</tabstop>
  <tabstop>m_prettyPrintOnSavingCheckBox</tabstop>
  <tabstop>okButton</tabstop>
  <tabstop>cancelButton</tabstop>
  <tabstop>m_defaultPushButton</tabstop>
  <tabstop>m_StrikeoutCheckBox</tabstop>
  <tabstop>m_colorComboBox</tabstop>
  <tabstop>m_exempleTextEdit</tabstop>
  <tabstop>m_alertStandardCheckBox</tabstop>
  <tabstop>m_saveSessionCheckBox</tabstop>
  <tabstop>m_projectPathLineEdit</tabstop>
  <tabstop>m_changeProjectPathBtn</tabstop>
  <tabstop>m_lineEditDefaultProjectPathName</tabstop>
  <tabstop>m_underlineCheckBox</tabstop>
  <tabstop>m_italicCheckBox</tabstop>
  <tabstop>m_boldCheckBox</tabstop>
  <tabstop>m_descriptionPathLineEdit</tabstop>
  <tabstop>m_closeLogCheckBox</tabstop>
  <tabstop>m_changeLogCheckBox</tabstop>
  <tabstop>m_changeApplicationDescriptionPathBtn</tabstop>
  <tabstop>m_langComboBox</tabstop>
  <tabstop>m_formatsListView</tabstop>
 </tabstops>
 <resources>
  <include location="../application.qrc" />
 </resources>
 <connections>
  <connection>
   <sender>okButton</sender>
   <signal>clicked()</signal>
   <receiver>CustomDialog</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel" >
     <x>583</x>
     <y>470</y>
    </hint>
    <hint type="destinationlabel" >
     <x>96</x>
     <y>254</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>cancelButton</sender>
   <signal>clicked()</signal>
   <receiver>CustomDialog</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel" >
     <x>668</x>
     <y>470</y>
    </hint>
    <hint type="destinationlabel" >
     <x>179</x>
     <y>282</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>m_listWidget</sender>
   <signal>currentTextChanged(QString)</signal>
   <receiver>label_18</receiver>
   <slot>setText(QString)</slot>
   <hints>
    <hint type="sourcelabel" >
     <x>103</x>
     <y>27</y>
    </hint>
    <hint type="destinationlabel" >
     <x>231</x>
     <y>16</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>m_listWidget</sender>
   <signal>currentRowChanged(int)</signal>
   <receiver>stackedWidget</receiver>
   <slot>setCurrentIndex(int)</slot>
   <hints>
    <hint type="sourcelabel" >
     <x>95</x>
     <y>190</y>
    </hint>
    <hint type="destinationlabel" >
     <x>165</x>
     <y>108</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
