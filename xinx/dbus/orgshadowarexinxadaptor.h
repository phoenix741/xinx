/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -a orgshadowarexinxadaptor org.shadoware.xinx.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORGSHADOWAREXINXADAPTOR_H_1219396017
#define ORGSHADOWAREXINXADAPTOR_H_1219396017

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.shadoware.xinx
 */
class XinxAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.shadoware.xinx")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.shadoware.xinx\" >\n"
"    <signal name=\"aboutToClose\" />\n"
"    <method name=\"newFile\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"    </method>\n"
"    <method name=\"newTemplate\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"category\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"description\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"text\" />\n"
"      <arg direction=\"in\" type=\"as\" name=\"arguments\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"key\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"type\" />\n"
"    </method>\n"
"    <method name=\"openFile\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"    </method>\n"
"    <method name=\"saveFileAs\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"    </method>\n"
"    <method name=\"saveAllFile\" />\n"
"    <method name=\"closeFile\" />\n"
"    <method name=\"closeAllFile\" />\n"
"    <method name=\"newProject\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"isDerivated\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"prefix\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"    </method>\n"
"    <method name=\"openProject\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"filename\" />\n"
"    </method>\n"
"    <method name=\"closeProjectNoSessionData\" />\n"
"    <method name=\"closeProjectWithSessionData\" />\n"
"    <method name=\"updateFromVersionManager\" >\n"
"      <arg type=\"as\" name=\"list\" />\n"
"    </method>\n"
"    <method name=\"commitToVersionManager\" >\n"
"      <arg type=\"as\" name=\"list\" />\n"
"    </method>\n"
"    <method name=\"addFilesToVersionManager\" >\n"
"      <arg type=\"as\" name=\"list\" />\n"
"    </method>\n"
"    <method name=\"removeFilesFromVersionManager\" >\n"
"      <arg type=\"as\" name=\"list\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    XinxAdaptor(QObject *parent);
    virtual ~XinxAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void addFilesToVersionManager(const QStringList &list);
    void closeAllFile();
    void closeFile();
    void closeProjectNoSessionData();
    void closeProjectWithSessionData();
    void commitToVersionManager(const QStringList &list);
    void newFile(const QString &filename);
    void newProject(const QString &name, const QString &path, bool isDerivated, const QString &prefix, const QString &filename);
    void newTemplate(const QString &name, const QString &category, const QString &description, const QString &text, const QStringList &arguments, const QString &key, const QString &type);
    void openFile(const QString &filename);
    void openProject(const QString &filename);
    void removeFilesFromVersionManager(const QStringList &list);
    void saveAllFile();
    void saveFileAs(const QString &filename);
    void updateFromVersionManager(const QStringList &list);
Q_SIGNALS: // SIGNALS
    void aboutToClose();
};

#endif
